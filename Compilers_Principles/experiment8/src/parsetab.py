
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS AVG BETWEEN BY COMMA COUNT DOT EQUALS FROM GE GT IN LE LP LT MAX MIN NAME NE NUMBER OR ORDER RP SELECT SUM WHERE\n    query :  select\n    \n    select : SELECT list FROM table opt_where_clause\n    \n    opt_where_clause : WHERE condition\n                     | empty\n    \n    condition : NAME EQUALS NAME\n              | NAME LT NAME\n              | NAME GT NAME\n              | NAME LE NAME\n              | NAME GE NAME\n              | NAME NE NAME\n              | condition AND condition\n              | condition OR condition\n              | LP condition RP\n              | NAME BETWEEN NAME AND NAME\n    \n    list : list COMMA field\n         | field\n    \n    empty :\n    \n    aggregate_function : AVG LP NAME RP\n                       | SUM LP NAME RP\n                       | MAX LP NAME RP\n                       | MIN LP NAME RP\n                       | COUNT LP NAME RP\n    \n    table : NAME\n          | NAME AS NAME\n          | aggregate_function\n          | aggregate_function AS NAME\n    \n    field : NAME\n          | NAME AS NAME\n          | aggregate_function\n          | aggregate_function AS NAME\n    '
    
_lr_action_items = {'SELECT':([0,],[3,]),'$end':([1,2,22,23,24,33,35,38,39,40,41,42,43,46,47,58,59,60,61,62,63,64,65,67,69,],[0,-1,-17,-23,-25,-2,-4,-18,-19,-20,-21,-22,-3,-24,-26,-11,-12,-5,-6,-7,-8,-9,-10,-13,-14,]),'NAME':([3,13,14,15,16,17,18,19,20,21,34,36,37,45,48,49,50,51,52,53,54,55,56,68,],[6,23,6,26,27,28,29,30,31,32,44,46,47,44,44,44,60,61,62,63,64,65,66,69,]),'AVG':([3,13,14,],[8,8,8,]),'SUM':([3,13,14,],[9,9,9,]),'MAX':([3,13,14,],[10,10,10,]),'MIN':([3,13,14,],[11,11,11,]),'COUNT':([3,13,14,],[12,12,12,]),'FROM':([4,5,6,7,25,26,27,38,39,40,41,42,],[13,-16,-27,-29,-15,-28,-30,-18,-19,-20,-21,-22,]),'COMMA':([4,5,6,7,25,26,27,38,39,40,41,42,],[14,-16,-27,-29,-15,-28,-30,-18,-19,-20,-21,-22,]),'AS':([6,7,23,24,38,39,40,41,42,],[15,16,36,37,-18,-19,-20,-21,-22,]),'LP':([8,9,10,11,12,34,45,48,49,],[17,18,19,20,21,45,45,45,45,]),'WHERE':([22,23,24,38,39,40,41,42,46,47,],[34,-23,-25,-18,-19,-20,-21,-22,-24,-26,]),'RP':([28,29,30,31,32,57,58,59,60,61,62,63,64,65,67,69,],[38,39,40,41,42,67,-11,-12,-5,-6,-7,-8,-9,-10,-13,-14,]),'AND':([43,57,58,59,60,61,62,63,64,65,66,67,69,],[48,48,48,48,-5,-6,-7,-8,-9,-10,68,-13,-14,]),'OR':([43,57,58,59,60,61,62,63,64,65,67,69,],[49,49,49,49,-5,-6,-7,-8,-9,-10,-13,-14,]),'EQUALS':([44,],[50,]),'LT':([44,],[51,]),'GT':([44,],[52,]),'LE':([44,],[53,]),'GE':([44,],[54,]),'NE':([44,],[55,]),'BETWEEN':([44,],[56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select':([0,],[2,]),'list':([3,],[4,]),'field':([3,14,],[5,25,]),'aggregate_function':([3,13,14,],[7,24,7,]),'table':([13,],[22,]),'opt_where_clause':([22,],[33,]),'empty':([22,],[35,]),'condition':([34,45,48,49,],[43,57,58,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select','query',1,'p_query','sql_parser.py',70),
  ('select -> SELECT list FROM table opt_where_clause','select',5,'p_select','sql_parser.py',77),
  ('opt_where_clause -> WHERE condition','opt_where_clause',2,'p_opt_where_clause','sql_parser.py',98),
  ('opt_where_clause -> empty','opt_where_clause',1,'p_opt_where_clause','sql_parser.py',99),
  ('condition -> NAME EQUALS NAME','condition',3,'p_condition','sql_parser.py',108),
  ('condition -> NAME LT NAME','condition',3,'p_condition','sql_parser.py',109),
  ('condition -> NAME GT NAME','condition',3,'p_condition','sql_parser.py',110),
  ('condition -> NAME LE NAME','condition',3,'p_condition','sql_parser.py',111),
  ('condition -> NAME GE NAME','condition',3,'p_condition','sql_parser.py',112),
  ('condition -> NAME NE NAME','condition',3,'p_condition','sql_parser.py',113),
  ('condition -> condition AND condition','condition',3,'p_condition','sql_parser.py',114),
  ('condition -> condition OR condition','condition',3,'p_condition','sql_parser.py',115),
  ('condition -> LP condition RP','condition',3,'p_condition','sql_parser.py',116),
  ('condition -> NAME BETWEEN NAME AND NAME','condition',5,'p_condition','sql_parser.py',117),
  ('list -> list COMMA field','list',3,'p_list','sql_parser.py',140),
  ('list -> field','list',1,'p_list','sql_parser.py',141),
  ('empty -> <empty>','empty',0,'p_empty','sql_parser.py',153),
  ('aggregate_function -> AVG LP NAME RP','aggregate_function',4,'p_aggregate_function','sql_parser.py',160),
  ('aggregate_function -> SUM LP NAME RP','aggregate_function',4,'p_aggregate_function','sql_parser.py',161),
  ('aggregate_function -> MAX LP NAME RP','aggregate_function',4,'p_aggregate_function','sql_parser.py',162),
  ('aggregate_function -> MIN LP NAME RP','aggregate_function',4,'p_aggregate_function','sql_parser.py',163),
  ('aggregate_function -> COUNT LP NAME RP','aggregate_function',4,'p_aggregate_function','sql_parser.py',164),
  ('table -> NAME','table',1,'p_table','sql_parser.py',172),
  ('table -> NAME AS NAME','table',3,'p_table','sql_parser.py',173),
  ('table -> aggregate_function','table',1,'p_table','sql_parser.py',174),
  ('table -> aggregate_function AS NAME','table',3,'p_table','sql_parser.py',175),
  ('field -> NAME','field',1,'p_field','sql_parser.py',187),
  ('field -> NAME AS NAME','field',3,'p_field','sql_parser.py',188),
  ('field -> aggregate_function','field',1,'p_field','sql_parser.py',189),
  ('field -> aggregate_function AS NAME','field',3,'p_field','sql_parser.py',190),
]
